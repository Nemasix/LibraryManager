@model IEnumerable<WebAppLibraryManager.Contracts.ResultDto>

@{
    ViewData["Title"] = "Search";
}

<h1>Search</h1>

<div class="row">
    <div class="col-md-12">
        <div class="input-group mb-3">
            <input type="text" class="form-control" aria-label="Search" aria-describedby="button-addon2" id="SearchText" />
            <button class="btn btn-outline-primary" type="button" id="SearchButton">Search</button>
            <button class="btn btn-outline-success" type="button" id="LoadingButton" disabled style="display:none;">
                <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
                <span role="status">Loading...</span>
            </button>
            <input type="hidden" id="SearchPage" value="1" />
            <input type="hidden" id="SearchLimit" value="20" />
        </div>
    </div>
</div>

<div class="row" id="SearchResult" style="display:none;">
    <h2>Search Result</h2>
    <div class="col-md-12">
        <span id="ResultsFound" class="badge text-bg-primary">X results found</span>
        <span id="ResultsShow" class="badge text-bg-secondary">X results show</span>
    </div>
    <table class="table table-stripped">
        <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Author</th>
                <th scope="col">ISBN</th>
                <th scope="col">Create</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item disabled"><span class="page-link">Previous</span></li>
            <li class="page-item active" aria-current="page"><span class="page-link">1</span></li>
            <li class="page-item disabled"><span class="page-link">Next</span></li>
        </ul>
    </nav>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("div#SearchResult").hide();

            $("button#SearchButton").on("click", function () {
                $("button#SearchButton").hide();
                $("button#LoadingButton").show();

                var SearchText = $("input#SearchText").val();
                if (SearchText == "") {
                    alert("Please enter a search text");
                    return;
                }
                if (SearchText.length < 3) {
                    alert("Please enter at least 3 characters");
                    return;
                }
                var data = { "Title": SearchText, "Author": SearchText, "Page": $("input#SearchPage").val(), "Limit": $("input#SearchLimit").val() };
                var ApiUrl = "@Url.Action("Search", "Search")";
                $.ajax({
                    url: ApiUrl,
                    type: "POST",
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    success: function (results) {
                        $("div#SearchResult").show();
                        $("span#ResultsFound").text(results.num_found + " results found");
                        $("span#ResultsShow").text(results.docs.length + " results show");
                        $("table tbody").empty();
                        $.each(results.docs, function (index, value) {
                            var Title = value.title;
                            var Author = value.author_name;
                            var ISBN = (value.isbn != null && value.isbn.length > 0) ? value.isbn[0] : "";
                            $("table tbody").append("<tr><td class='booktitle'>" + Title + "</td><td class='bookauthor'>" + Author + "</td><td>" + ISBN + "</td><td><a href='@Url.Action("Create", "Books")?title=" + Title + "&author=" + Author + "&isbn=" + ISBN + "' type='button' class='btn btn-secondary'>Create a book</button></td></tr>");
                        });
                        $("button#LoadingButton").hide();
                        $("button#SearchButton").show();
                    },
                    error: function (jqxhr, textStatus, error) {

                        var err = textStatus + ", " + error;
                        alert("Error: " + err);
                        console.log("Request Failed: " + err);
                        console.log("incoming Text " + jqxhr.responseText);
                        $("button#LoadingButton").hide();
                        $("button#SearchButton").show();
                    }
                });
            });
            $("input#SearchText").on("keypress", function (e) {
                if (e.which == 13) {
                    $("button#SearchButton").click();
                }
            });
        });
    </script>
}